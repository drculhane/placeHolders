    _         _                   _       
   / \   _ __| | _____  _   _  __| | __ _ 
  / _ \ | '__| |/ / _ \| | | |/ _` |/ _` |
 / ___ \| |  |   < (_) | |_| | (_| | (_| |
/_/   \_\_|  |_|\_\___/ \__,_|\__,_|\__,_|
                                          

Client Version: v2024.04.19+84.g6413d3425.dirty
Test of 2D array creation.
Numpy
[[ 0  1  2  3  4  5]
 [ 6  7  8  9 10 11]
 [12 13 14 15 16 17]
 [18 19 20 21 22 23]
 [24 25 26 27 28 29]]
 
Arkouda
[[0 1 2 3 4 5] [6 7 8 9 10 11] [12 13 14 15 16 17] [18 19 20 21 22 23] [24 25 26 27 28 29]]

Test of matrix multiplication.
Numpy
[[110 125]
 [290 341]
 [470 557]
 [650 773]
 [830 989]]
 
Arkouda
[[110 125] [290 341] [470 557] [650 773] [830 989]]

Tests of zeros, ones, full
3x3 array of zeros:   [[0.0 0.0 0.0] [0.0 0.0 0.0] [0.0 0.0 0.0]]
2x2 array of ones:    [[1.0 1.0] [1.0 1.0]]
5x5 array of sevens:  [[7 7 7 7 7] [7 7 7 7 7] [7 7 7 7 7] [7 7 7 7 7] [7 7 7 7 7]]

Tests of 'like', based on this array:  [[0 1] [2 3]]
Zeroes    :  [[0 0] [0 0]]
Ones      :  [[1 1] [1 1]]
Thirteens :  [[13 13] [13 13]]

Tests of random number generation, all in arkouda.
Randint
3x3 array of random integers:  [[8 5 7] [1 1 3] [0 7 0]]

Tests of ak.random.default_rng
Poisson 3x4 array:
[[0 2 2 2] [2 2 1 2] [2 0 1 1]]
Integers 3x4 array:
[[11 7 12 9] [7 7 11 12] [11 11 7 12]]
Uniform 3x4 array:
[[3.74754 3.85948 8.99439 5.7172] [8.22428 3.97725 5.24698 3.34903] [9.93788 6.59043 8.89524 1.91491]]
Standard Normal 3x4 array:
[[-1.92667 0.123493 -0.679702 0.340709] [-2.38974 -0.594119 0.645138 -0.327849] [-0.614366 -1.39805 -0.0383697 0.775767]]
Exponential 3x4 array:
[[1.91161 0.341628 0.0966781 0.894602] [0.726139 0.534053 0.122244 0.516252] [0.895574 0.760051 0.287206 0.641275]]
Standard Exponential (same fn as Exponential) 3x4 array:
[[1.81319 2.7706 1.00615 0.668566] [1.46851 2.55057 1.2487 0.429495] [0.464477 0.377314 0.199802 0.0981523]]

Test of vecdot
[[1 1] [3 9] [8 9]]  vecdot  [[2 0] [1 0] [3 6]]  =  [29 54]
